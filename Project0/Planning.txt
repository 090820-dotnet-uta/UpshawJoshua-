Class Customer
**-has ID number, first name, last name, etc.
**(optional: has a default store location to order from)

Class Order
**has a store location
**has a customer
**has an order time (when the order was placed)
**can contain multiple different products in the same order
**rejects orders with unreasonably high product quantities
**(optional: some additional business rules, like special deals)

Class Product 
**-Has a name
**has appropriate descriptive properties (quantity in stock, price, size?)

Class Location(store location)
**has an inventory
**inventory decreases when orders are accepted
-rejects orders that cannot be fulfilled with remaining inventory (C#)
**(optional: for at least one product, more than one inventory item decrements when ordering that product), think bundles/needing two or more items to sell that item

Interface 

Functions
-place orders to store locations for customers (C#)
-add a new customer (C#)
**-search customers by name
**display details of an order
**display all order history of a store location
**display all order history of a customer
-input validation (checks)
-exception handling
-persistent data; no hardcoding of data.(prices, customers, order history, etc.)
-(optional: order history can be sorted by earliest, latest, cheapest, most expensive)
-(optional: get a suggested order for a customer based on his order history)
-(optional: display some statistics based on order history)


***Rules***
-use EF Core (either database-first approach or code-first approach)
-use a DB in third normal form (no composite keys, everything revolves around the key)
-don't use public fields(use Properties to access private fields.)
-prevent values that are out of range in a logical way.
-define and use at least one interface
-(+5 pts BONUS) use an eventHandler with at least 3 methods.

I have always been someone that has strived to be the very best that I can be, whether it was allocating funds and planning tournaments as president of the FSU Rugby team, learning to program by crafting a functional storefront with associated database or upholding the ethical and moral statutes of my fraternity as the executive chair of the Judicial review board so that we could enact meaningful change on campus, there is no challenge I can not and will not bring my whole heart and soul into overcoming. I pride myself in being someone that is not only adaptable and persistant, but someone that will always push myself to lead so that not only myself, but those around me, suceed as well. - specifics.